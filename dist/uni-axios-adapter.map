{"version":3,"sources":["webpack://uni-axios-adapter/webpack/universalModuleDefinition","webpack://uni-axios-adapter/./index.js","webpack://uni-axios-adapter/./lib/adapter.js","webpack://uni-axios-adapter/./lib/helper.js","webpack://uni-axios-adapter/webpack/bootstrap","webpack://uni-axios-adapter/webpack/startup"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;ACVA,yCAAyC,C;;;;;;;ACAzC;AACA,OAAO,qCAAqC,GAAG,mBAAO,CAAC,GAAU;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;UC3HlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"uni-axios-adapter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"uni-axios-adapter\"] = factory();\n\telse\n\t\troot[\"uni-axios-adapter\"] = factory();\n})(self, function() {\nreturn ","module.exports = require('./lib/adapter');","/* eslint-disable no-undef */\r\nconst { buildFullPath, settle, createError } = require(\"./helper\");\r\n\r\n/**\r\n * uni request axios adapter\r\n * config api link https://github.com/axios/axios#request-config\r\n * xhrAdapter link https://github.com/axios/axios/blob/master/lib/adapters/xhr.js\r\n */\r\nmodule.exports = function uniAdapter(config) {\r\n  return new Promise(function (resolve, reject) {\r\n    const method = config.method.toUpperCase() || \"GET\";\r\n    let requestData = method === \"GET\" ? config.params : config.data;\r\n    let requestHeaders = config.headers;\r\n    // only support android\r\n    const sslVerify = config.sslVerify || true;\r\n    // only support h5\r\n    const withCredentials = config.withCredentials || false;\r\n    // only support android\r\n    const firstIpv4 = config.firstIpv4 || false;\r\n    const responseType = config.responseType || \"json\";\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      const username = config.auth.username || \"\";\r\n      const password = config.auth.password\r\n        ? unescape(encodeURIComponent(config.auth.password))\r\n        : \"\";\r\n      requestHeaders.Authorization = \"Basic \" + btoa(username + \":\" + password);\r\n    }\r\n\r\n    const fullpath = buildFullPath(config.baseURL, config.url);\r\n\r\n    let requestTask;\r\n    // only support single file upload\r\n    if (\r\n      requestData &&\r\n      method === \"POST\" &&\r\n      requestHeaders[\"Content-Type\"] === \"multipart/form-data\"\r\n    ) {\r\n      /**\r\n       * data need item [ fileType, filePath, name ]\r\n       */\r\n      const requestFormData = {};\r\n      const requestOtherFormData = {};\r\n      let tmpObj;\r\n      try {\r\n        tmpObj = JSON.parse(requestData);\r\n      } catch (e) {\r\n        tmpObj = {};\r\n      }\r\n      // formdata transfer to obj\r\n      Object.keys(tmpObj).forEach(function (key) {\r\n        if ([\"fileType\", \"filePath\", \"name\"].indexOf(key) === -1) {\r\n          requestOtherFormData[key] = tmpObj[key];\r\n        } else {\r\n          requestFormData[key] = tmpObj[key];\r\n        }\r\n      });\r\n\r\n      // https://uniapp.dcloud.io/api/request/network-file?id=uploadfile\r\n      requestTask = uni.uploadFile({\r\n        url: fullpath,\r\n        name: requestFormData.name,\r\n        filePath: requestFormData.filePath,\r\n        fileType: requestFormData.fileType,\r\n        header: requestHeaders,\r\n        timeout: config.timeout,\r\n        formData: requestOtherFormData,\r\n        success: function (res) {\r\n          const response = {\r\n            data: res.data,\r\n            status: res.statusCode,\r\n            statusText: res.statusCode === 200 ? \"OK\" : \"ERROR\",\r\n            headers: null,\r\n            config,\r\n            request: null,\r\n          };\r\n          settle(resolve, reject, response);\r\n        },\r\n        fail: function (e) {\r\n          reject(createError(e.errMsg || \"Network Error\", config, null, null));\r\n        },\r\n      });\r\n\r\n      // Handle progress if needed\r\n      if (typeof config.onUploadProgress === \"function\") {\r\n        requestTask.onProgressUpdate = config.onUploadProgress;\r\n      }\r\n    } else if (\r\n      requestData &&\r\n      method === \"GET\" &&\r\n      typeof config.onDownloadProgress === \"function\"\r\n    ) {\r\n      // https://uniapp.dcloud.io/api/request/network-file?id=downloadfile\r\n      requestTask = uni.downloadFile({\r\n        url: fullpath,\r\n        header: requestHeaders,\r\n        timeout: config.timeout,\r\n        success: function (res) {\r\n          const response = {\r\n            data: { tempFilePath: res.tempFilePath },\r\n            status: res.statusCode,\r\n            statusText: res.statusCode === 200 ? \"OK\" : \"ERROR\",\r\n            headers: null,\r\n            config,\r\n            request: null,\r\n          };\r\n          settle(resolve, reject, response);\r\n        },\r\n        fail: function (e) {\r\n          reject(createError(e.errMsg || \"Network Error\", config, null, null));\r\n        },\r\n      });\r\n\r\n      requestTask.onProgressUpdate = config.onDownloadProgress;\r\n    } else {\r\n      // https://uniapp.dcloud.io/api/request/request\r\n      requestTask = uni.request({\r\n        url: fullpath,\r\n        method,\r\n        data: requestData || null,\r\n        header: requestHeaders,\r\n        sslVerify,\r\n        withCredentials,\r\n        dataType: responseType,\r\n        responseType: responseType === \"arraybuffer\" ? \"arraybuffer\" : \"text\",\r\n        timeout: config.timeout,\r\n        firstIpv4,\r\n        success: function (res) {\r\n          const response = {\r\n            data: res.data,\r\n            status: res.statusCode,\r\n            statusText: res.statusCode === 200 ? \"OK\" : \"ERROR\",\r\n            headers: res.header,\r\n            config,\r\n            request: null,\r\n          };\r\n          settle(resolve, reject, response);\r\n        },\r\n        fail: function (e) {\r\n          reject(createError(e.errMsg || \"Network Error\", config, null, null));\r\n        },\r\n      });\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!requestTask) {\r\n          return;\r\n        }\r\n        requestTask.abort();\r\n        reject(cancel);\r\n        // clean up request\r\n        requestTask = null;\r\n      });\r\n    }\r\n  });\r\n};\r\n","/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nfunction buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n}\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nfunction isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  // eslint-disable-next-line no-useless-escape\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n}\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nfunction combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, \"\") + \"/\" + relativeURL.replace(/^\\/+/, \"\")\r\n    : baseURL;\r\n}\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nfunction createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n}\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nfunction enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code,\r\n    };\r\n  };\r\n  return error;\r\n}\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nfunction settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(\r\n      createError(\r\n        \"Request failed with status code \" + response.status,\r\n        response.config,\r\n        null,\r\n        response.request,\r\n        response\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = { buildFullPath, settle, createError };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n"],"sourceRoot":""}